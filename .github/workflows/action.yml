# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      
      - name: Run a one-line script
        run: |
          echo "var=`cat env.txt | grep VAR1`" >> $GITHUB_ENV

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo ${{ env.var }}

      - name: Checkout writeRepo
        uses: actions/checkout@v3
        with:
          repository: TryToLearnProgramming/writeRepo
          path: ./writeRepo
          ref: main
          token: ${{ secrets.REPO_PAT }}

      - name: send file and commit
        run: |
          cd writeRepo
          ls
          echo ${{ env.var }}
          echo $var >> ./test.txt
          cat test.txt
          git config --global user.email "samivivake@gmail.com"
          git config --global user.name "TryToLearnProgramming"
          # git remote set-url origin https://TryToLearnProgramming:${{ secrets.REPO_PAT }}@github.com/TryToLearnProgramming/readRepo.git
          git add .
          git commit -m "done"
          parallel --retries 10 --delay 3 ::: "git pull --rebase && git push origin main"
        # if: steps.image_build.outcome == 'success'

